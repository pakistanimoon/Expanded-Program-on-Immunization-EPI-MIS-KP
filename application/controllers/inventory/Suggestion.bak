<?php
/**************************************************************************/
/******************** This Class will automatically    ********************/
/******************** Calculate and suggest some       ********************/
/******************** values based upon given data     ********************/
/******************** Author: Raja Imran Qamer Gakhar  ********************/
/******************** Email: rajaimranqamer@gmail.com  ********************/
/**************************************************************************/
class Suggestion extends CI_Controller {
	public function __construct() {
		parent::__construct();
		$this -> load -> helper('epi_functions_helper');
		$this -> load -> helper('epi_reports_helper');
		authentication();
		$this -> load -> helper('inventory_helper');
		$this -> load -> model ('Inventory_model',"invn");
		$this -> load -> model ('Common_model',"common");
	}
	/****************************************************/
	/********* This function will automatically *********/
	/********* Calculate Requisition of HF and  *********/
	/********* district for next 45 and 60 days *********/
	/********* respectively based upon given    *********/
	/********* Closing balance of previous      *********/
	/********* submitted report.                *********/
	/****************************************************/
	function autoProdRequisition()
	{
		$storecode	= $this->input->post("storecode");
		$storetype	= $this->input->post("storetype");
		$product	= $this->input->post("product");
		$rownum		= ($this->input->post("rownum"))?$this->input->post("rownum"):1;
		$doses		= ($this->input->post("doses"))?$this->input->post("doses"):1;
		$category	= ($this->input->post("category"))?$this->input->post("category"):1;
		$datetime	= ($this->input->post("trans_date_time"))?$this->input->post("trans_date_time"):1;
		if($rownum>0){
			if($storetype==6){
				$curryear 		= date("Y",strtotime($datetime));
				//Target*no of vaccination with this vaccine*wastage rate*period in months to fullfill minnimum stocklevel requirement.
				$itemdata 		= $this->common->get_info("epi_item_pack_sizes",NULL,NULL,"
					(
						case 
							when item_id IN (2,8,9,20) then getmonthlynewborn_targetpopulationpop('".$storecode."','".$curryear."')::double precision*multiplier*wastage_rate_allowed*1.5
							when item_id IN (15) then (
								(getmonthlynewborn_targetpopulationpop('".$storecode."','".$curryear."')::double precision*1*wastage_rate_allowed*1.5)
								+
								(getmonthly_survivinginfantspop('".$storecode."','facility','".$curryear."')::double precision*(multiplier-1)*wastage_rate_allowed*1.5)
							)
							when item_id IN (3,4,5,7,17,19,21,22,23,24,26) then getmonthly_survivinginfantspop('".$storecode."','facility','".$curryear."')::double precision*multiplier*wastage_rate_allowed*1.5
							when item_id IN (6) then getmonthly_plwomen_targetpop('".$storecode."','".$curryear."')::double precision*multiplier*wastage_rate_allowed*1.5 
							else 0 
						end
					) as minstockreq
				",array("pk_id" =>$product));
				$required		= $itemdata->minstockreq;

				//$detaildata 	= $this->common->get_info("form_b_cr",NULL,NULL,"cr_r".$rownum."_f4 as vaccinated,cr_r".$rownum."_f6 as balance",array("facode"=>$storecode),array("by"=>"fmonth","type"=>"Desc"));
				$detaildata 	= $this->common->get_info("epi_consumption_master",NULL,NULL,"sum(closing_vials) as balance",array("facode"=>$storecode,"item_id"=>$product),array("by"=>"fmonth","type"=>"Desc"),"fmonth",array("table"=>"epi_consumption_detail","id"=>"pk_id","tablecol"=>"main_id"));
				$stockbalance	= $detaildata->balance;
				$availbalance	= $detaildata->balance;
			}else if($storetype==4){
				$currtimestamp 	= date("Y-m-d H:i:s",strtotime($datetime));
				$curryear 		= date("Y",strtotime($datetime));
				//Target*no of vaccination with this vaccine*wastage rate*period in months to fullfill minnimum stocklevel requirement.
				$itemdata 		= $this->common->get_info("epi_item_pack_sizes",NULL,NULL,"
					(
						case 
							when item_id IN (2,8,9,20) then getmonthlynewborn_targetpopulationpop('".$storecode."','".$curryear."')::double precision*multiplier*wastage_rate_allowed*2
							when item_id IN (15) then (
								(getmonthlynewborn_targetpopulationpop('".$storecode."','".$curryear."')::double precision*1*wastage_rate_allowed*2)
								+
								(getmonthly_survivinginfantspop('".$storecode."','district','".$curryear."')::double precision*(multiplier-1)*wastage_rate_allowed*2)
							)
							when item_id IN (3,4,5,7,17,19,21,22,23,24,26) then getmonthly_survivinginfantspop('".$storecode."','district','".$curryear."')::double precision*multiplier*wastage_rate_allowed*2
							when item_id IN (6) then getmonthly_plwomen_targetpop('".$storecode."','".$curryear."')::double precision*multiplier*wastage_rate_allowed*2 
							else 0 
						end
					) as minstockreq
				",array("pk_id" =>$product));
				$required		= $itemdata->minstockreq;

				/* $detaildata 	= $this->common->get_info("form_b_cr",NULL,NULL,"get_curr_stock_quantity ('".$currtimestamp."', '".$storetype."', '".$storecode."', ".$product.") as distbalance,
				sum(cr_r".$rownum."_f4) as vaccinated,sum(cr_r".$rownum."_f6) as balance",array("distcode"=>$storecode),array("by"=>"fmonth","type"=>"Desc"),"fmonth"); */
				$detaildata 	= $this->common->get_info("epi_consumption_master",NULL,NULL,"get_curr_stock_quantity ('".$currtimestamp."', '".$storetype."', '".$storecode."', ".$product.") as distbalance,
				sum(closing_vials) as balance",array("distcode"=>$storecode,"item_id"=>$product),array("by"=>"fmonth","type"=>"Desc"),"fmonth",array("table"=>"epi_consumption_detail","id"=>"pk_id","tablecol"=>"main_id"));
				$facbalance		= $detaildata->balance;
				$distbalance	= $detaildata->distbalance;
				$stockbalance	= $facbalance+$distbalance;
				$availbalance	= $distbalance;
				$data['balanceParts'] = array("facbalance"=>$facbalance,"distbalance"=>$distbalance);
			}else{
				$stockbalance 	= 0;
				$$availbalance 	= 0;
				$required		= 0;
				$requisition 	= 0;
			}
			//$balanceInDoses 	= $stockbalance*$doses;
			$balanceInDoses 	= $availbalance*$doses;
			$requisition 		= $required-$balanceInDoses;
			if($requisition<0){
				$requisition 	= 0;
			}
		}else{
			$stockbalance 	= 0;
			$$availbalance 	= 0;
			$required		= 0;
			$requisition 	= 0;
		}
		$data['balance']	= $stockbalance;
		$data['required']	= ceil($required/$doses);
		$data['requisition']= ceil($requisition/$doses);
		echo json_encode($data);
	}
}
?>